name: delivery / ubuntu

on:
  release:
    types:
      - released
  workflow_dispatch:
    inputs:
      tag_name:
        description: The release tag to distribute
        required: true
      ubuntu_ppa:
        description: flag indicating this is an ubuntu release
        required: true


jobs:
    create-ppa:
      #if: github.event_name == 'release'
      strategy:
        fail-fast: false
        matrix:
          target: [xenial, bionic, focal]
          include:
            - target: xenial
              runner: ubuntu-16.04
              image: docker://ubuntu:16.04
              i386-go-version: 1.13
            - target: bionic
              runner: ubuntu-18.04
              image: docker://ubuntu:18.04
              i386-go-version: 1.15
            - target: focal
              runner: ubuntu-20.04
              image: docker://ubuntu:20.04
              i386-go-version: none
      name: create-ppa
      runs-on:  ${{ matrix.runner }}

      steps:
          - name: Determine version
            uses: actions/github-script@v4.0.1
            id: version
            with:
              result-encoding: string
              script: |
                let payload = context.payload;
                let tag = (payload.release && payload.release.tag_name) || (payload.inputs && payload.inputs.tag_name);
                if (!tag) {
                  throw "ERROR: unable to determine tag"
                }
                return tag.replace(/^v/, '');
          - name: Checkout code
            uses: actions/checkout@v2

          - name: Metadata
            id: metadata
            run: |
                echo "::set-output name=date::$(date +"%a, %d %b %Y %T %z")"

          - name: Install packaging tools
            run: |
                sudo apt-get update
                sudo apt-get install software-properties-common -y
                sudo add-apt-repository ppa:longsleep/golang-backports -y
                sudo apt-get update
                sudo apt-get install gnupg dput dh-make devscripts lintian golang -y

          - name: Fill debian/*
            uses: cschleiden/replace-tokens@v1
            with:
              files: '[".github/workflows/delivery/ubuntu/debian/*"]'
              tokenPrefix: '{{'
              tokenSuffix: '}}'
            env:
              ARCH: "any"
              I386_GO_VERSION: ${{matrix.i386-go-version}}
              PACKAGE_NAME: "pack-cli"
              UBUNTU_VERSION:  ${{ matrix.target }}
              HOMEPAGE: "https://buildpacks.io"
              PACK_VERSION: ${{ steps.version.outputs.result }}
              REPO: "buildpacks/pack"
              DESCRIPTION: "CLI for building apps using Cloud Native Buildpacks"
              DATE_TIME: ${{ steps.metadata.outputs.date }}
              MAINTAINER_NAME: "cncf-buildpacks"
              MAINTAINER_EMAIL: "cncf-buildpacks-maintainers@lists.cncf.io"

          - name: Create PPA
            run: ./.github/workflows/scripts/create_ppa.sh
            env:
              PACKAGE_NAME: "pack-cli"
              PACKAGE_VERSION: ${{ steps.version.outputs.result }}
              MAINTAINER: "cncf-buildpacks"
              MAINTANER_EMAIL: "cncf-buildpacks-maintainers@lists.cncf.io"
              GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
              GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}

          - name: Test Xenial
            if: matrix.target == 'xenial'
            uses: docker://ubuntu:16.04
            env:
              PACKAGE_NAME: "pack-cli"
            with:
              entrypoint: .github/workflows/delivery/ubuntu/test-install-package.sh

          - name: Test Bionic
            if: matrix.target == 'bionic'
            uses: docker://ubuntu:18.04
            env:
              PACKAGE_NAME: "pack-cli"
            with:
              entrypoint: .github/workflows/delivery/ubuntu/test-install-package.sh

          - name: Test Focal
            if: matrix.target == 'focal'
            uses: docker://ubuntu:20.04
            env:
              PACKAGE_NAME: "pack-cli"
            with:
              entrypoint: .github/workflows/delivery/ubuntu/test-install-package.sh

          - name: Upload
            run: |
              dput "${PPA_DEST}" ./../*.changes
            env:
              PPA_DEST: "ppa:cncf-buildpacks/pack-cli"


