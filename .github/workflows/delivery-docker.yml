name: delivery / docker

on:
  release:
    types:
      - released
  workflow_dispatch:
    inputs:
      tag_name:
        description: The release tag to distribute
        required: true

env:
  BUILDER: "paketobuildpacks/builder:tiny"
  IMG_NAME: 'pack'
  USERNAME: 'buildpacksio'

jobs:
  deliver-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Determine version
        uses: actions/github-script@v4.0.1
        id: version
        with:
          result-encoding: string
          script: |
            let tag = (context.payload.release && context.payload.release.tag_name)
              || (context.payload.inputs && context.payload.inputs.tag_name);

            if (!tag) {
              throw "ERROR: unable to determine tag";
            }

            return tag.replace(/^v/, '');
      - name: Checkout source at tag
        uses: actions/checkout@v2
        with:
          ref: v${{ steps.version.outputs.result }}
      # This has to come after the first checkout, so it isn't clobbered
      - name: Checkout delivery configuration
        uses: actions/checkout@v2
        with:
          path: ./head
      - name: Setup Working Dir
        shell: bash
        run: |
          cp head/.github/workflows/delivery/docker/buildpack.yml buildpack.yml
      - name: Fill buildpack.yml
        uses: cschleiden/replace-tokens@v1
        env:
          PACK_VERSION: ${{ steps.version.outputs.result }}
        with:
          files: buildpack.yml
      - name: Determine App Name
        run: 'echo "IMG_NAME=${{ env.USERNAME }}/${{ env.IMG_NAME }}" >> $GITHUB_ENV'
      - name: Pack Build/Publish
        uses: dfreilich/pack-action@v1
        with:
          args: 'build ${{ env.IMG_NAME }}:${{ steps.version.outputs.result }} --path $(pwd)/ --builder ${{ env.BUILDER }} --publish'
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Tag Image as Latest
        run: |
          docker pull ${{ env.IMG_NAME }}:${{ steps.version.outputs.result }}
          docker tag ${{ env.IMG_NAME }}:${{ steps.version.outputs.result }} ${{ env.IMG_NAME }}:latest
          docker push ${{ env.IMG_NAME }}:latest
